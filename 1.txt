#include<iostream>
using namespace std;

using std::cout;
using std::endl;

namespace A
{
	namespace B
	{
		namespace C
		{
			int num;
		}
	}
}

namespace ABC = A::B::C;


int main()
{
	/*
	- 변수 -
	변수란?-> 변할 수 있는 숫자, 데이터(컴퓨터적으로)
	값을 저장할 수 있는 메모리 공간에 붙는 이름

	※ 변수라는걸 알기 위해서 "데이터 타입"(자료형)이라는 놈을 알고 있어야 한다.

	int: 정수형
	float: 부동소수점: 123.4567, 3.14
	bool: 0(거짓), 1(참)

	true: 참을 의미하는 1바이트 데이터
	false: 거짓을 의미하는 1바이트 데이터

	*/

	//bool: 자료형
	//isPlayerDead: 변수명
	//-: 대입 연산자
	//false: 초기값

	bool isPlayerDead = false;

	//변수의 선언으로 인해서 num이라는 이름으로 메모리 공간이 할당
	//int num = 20;은 단순히 num에 20을 저장하는게 아니라 num이 의미하는
	//메모리 공간에 20을 넣어라는 의미이다.
	int num = 20;


	//변수 선언 방식에 대해서
	//변수를 먼저 선언하고
	int num1;
	//선언 이후 초기화 가능하다

	//변수를 선언과 동시에 초기화 했다
	int num2 = 3;
	int num3 = 6;

	//특징: 초기값이 같으면 변수를 몰아서 초기화가 가능
	int num4,num5, num6;
	num4 = num5 = num6 = 100;

	int num = 100;

	//==============================================================================================================================
	/*
	- 변수 선언 방식에 대하여 =
	
	1. 헝가리안 표기법
	- 예전 절차지향적 방식으로 코딩을 할때 이 변수가 어떤 변수인지 알기 위하여
	  서로 약속이라도 하듯이 그 변수앞에 그 변수의 데이터가 뜻하는 약자를 붙인다.

	  int num      < = > nNum;
	  float num2   < = > fNum;
	  bool player  < = > bPlayer;

	 //c언어 표기법 -> 올드한다 -> 잘안쓴다 -> 하지만 언리얼을 하게 된다면.......

	 2. 카멜식 표기법
	 - 최근 객체지향적인 방식의 코딩으로 성향이 바뀌면서 어떤 변수인지 알기 위하여
	   한 단어의 앞글자만 대문자로 표기한다-> 가독성 Up

	int playerselectnum < = > playerSelectNum

	3. 파스칼 표기법
	- 첫 단어를 대문자로 표기하고 나머지는 카멜 표기법과 동일하다.
	-> PlayerSelectNum

	4. 스네이크 표기법
	- 단어를 언더바(밑줄)로 끊어서 표기하는 방법
	-> player_select_num


	==============================================================================================================
	-변수 이름의 특징 - 
	-변수의 이름은 알파벳, 숫자, 언더바(_)로 구성이 된다.
	 C언의 기본적으로 대소문자를 구분한다-> Num과 num은 다른 변수다.
	 
	※ 변수의 이름은 숫자로 시작할 수 없고 키워드(데이터 타입)도 변수의ㅡ 이름으로 사용할 수 없다. 또한 이름사이에 공백이 삽입될 수도 없다.




	*/

	//INT32_MAX


	return 0;
}